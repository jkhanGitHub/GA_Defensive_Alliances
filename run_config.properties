#inital configurations graph data
FILEPATH=lastfm_asia/lastfm_asia_edges.csv
NUMBER_OF_NODES=7624
POPULATION_SIZE=2048

#probability of each allele in a genome to be 1 on population initialization and creation of a new Genome without parents (for example creating new genomes after duplicates got removed)
NODE_EXISTENCE_PROBABILITY=0.5

# recombine Parents: Number of parent candidates needs to be even, because there will always be two parents for one child
NUMBER_OF_PARENTS=400

#how many children one parent pair produces; Total number of offspring=(parentscandidates*NUMBER_OF_CHILDS_PER_PARENT)/2
NUMBER_OF_CHILDS_PER_PARENT=4

#Probability for each allele to mutate (flip)
MUTATION_RATE=0.000131

#Number of iterations the Genetic Algorithm runs or number of Generations it produces
NUMBER_OF_ITERATIONS=50

#search for defensive alliance of size k (this value is used in the fitness function; turn it to 2 if u want to search for the smallest and to number of nodes -1 if you are searching for the greatest defensive alliance)
SIZE_OF_DEFENSIVE_ALLIANCE=20

#this parameter is used to filter out nodes that cannot be part of a defensive alliance of size k
#this means that the initial population won´t contain any nodes with degree(v) >= 2k+1
FILTER_NODES_THAT_CANNOT_BE_IN_A_DEFENSIVE_ALLIANCE_OF_SIZE_K=true

#Maximum achievable Fitness value is equal to the number of nodes in the graph 
#if the value is higher than the number of nodes in the graph then the algorithm wont stop before reaching the maximum number of iterations.
BREAK_FITNESS=7624

#relevant in case of ProababilityIntersection; it shows the likelyhood of a allele turning to 1 when the intersection results 0
INTERSECTION_PROBABILITY=0.5

#there are also some more methods but OnePointCrossover(Threaded) is the best and is the only one that should be used, because the other has bugs
#OnePointCrossover || ProbabilityIntersection
RECOMBINATION_METHOD=OnePointCrossover


#Stochastic Universal Sampling || Tournament Selection Elimination || Roulette Wheel Selection || Linear Rank Selection || Exponential Rank Selection || Elitism || Random
SELECTION_METHOD=Random

#May selection methods choose duplicate Parents? Yes=True , No=False
ALLOW_DUPLICATE_PARENTS=false

#two types of Mutation are available; Mutation || Mutation of vertices with high degree
#the second method is more likely to mutate nodes with higher degree value
MUTATION_METHOD=Mutation

# this variable results in survivors learning if true. if false then they wont learn
ACTIVATE_LEARNING=true

#amount of allele in a survivor that will be changed in order to improve its fitness in case of Learning being activated
AMOUNT_OF_LEARNINGS=10

# CAPPED_LEARNING=false results in all survivors Learning and =true results in taking the next to attributes into consideration
CAPPED_LEARNING=true

#Maximum amout of survivors that will learn, if count is higher than number of survivors all surviviors will learn
AMOUNT_OF_LEARNERS=1000

#RANDOMIZE_LEARNERS=true results in AMOUNT_OF_LEARNERS.value amount of randomly selected survivors starting to Learn.
#RANDOMIZE_LEARNERS=false results in AMOUNT_OF_LEARNERS.value amount of the highest fitness survivors starting to Learn.
RANDOMIZE_LEARNERS=false
